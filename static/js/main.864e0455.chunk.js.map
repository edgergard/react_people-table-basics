{"version":3,"sources":["components/HomePage.tsx","components/Human.tsx","components/PersonList.tsx","api.ts","components/Loader/Loader.tsx","components/PeoplePage.tsx","components/NavBar.tsx","App.tsx","components/PageNotFound.tsx","Root.tsx","index.tsx"],"names":["HomePage","className","Human","person","name","sex","born","died","motherName","fatherName","mother","father","selectedPersonSlug","useParams","slug","classNames","to","PersonList","people","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeoplePage","useState","setPeople","errorMessage","setErrorMessage","isLoading","setIsLoading","useEffect","catch","error","finally","peopleWithParents","find","mom","dad","isNoPeopleMessage","length","isErrorMessage","getLinkClass","isActive","NavBar","role","App","PageNotFound","Root","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.864e0455.chunk.js","sourcesContent":["export const HomePage: React.FC = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Home Page</h1>\n  </div>\n);\n","/* eslint-disable no-nested-ternary */\nimport classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const Human: React.FC<Props> = ({\n  person,\n}) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n  } = person;\n\n  const { slug } = useParams();\n  const selectedPersonSlug = slug || '';\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': selectedPersonSlug === person.slug,\n      })}\n    >\n      <td>\n        <Link\n          to={`../${person.slug}`}\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {motherName ? (\n          mother ? (\n            <Link\n              className={classNames({\n                'has-text-danger': motherName,\n              })}\n              to={`../${mother?.slug}`}\n            >\n              {motherName}\n            </Link>\n          ) : (\n            `${motherName}`\n          )\n        ) : (\n          '-'\n        )}\n      </td>\n\n      <td>\n        {fatherName ? (\n          father ? (\n            <Link\n              className={classNames({\n                'has-text-safe': fatherName,\n              })}\n              to={`../${father?.slug}`}\n            >\n              {fatherName}\n            </Link>\n          ) : (\n            `${fatherName}`\n          )\n        ) : (\n          '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../types';\nimport { Human } from './Human';\n\ntype Props = {\n  people?: Person[];\n};\n\nexport const PersonList: React.FC<Props> = ({\n  people,\n}) => {\n  return (\n    <>\n      {people && people.map(person => (\n        <Human\n          key={person.slug}\n          person={person}\n        />\n      ))}\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useState, useEffect } from 'react';\nimport { PersonList } from './PersonList';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>();\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(setPeople)\n      .catch((error) => {\n        setErrorMessage('Something went wrong');\n        throw error;\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const peopleWithParents = people?.map((person) => {\n    const mother = people.find(mom => mom.name === person.motherName);\n    const father = people.find(dad => dad.name === person.fatherName);\n\n    return { ...person, mother, father };\n  });\n\n  const isNoPeopleMessage = !people?.length && !errorMessage && !isLoading;\n  const isErrorMessage = errorMessage && !isLoading;\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {isErrorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {errorMessage}\n            </p>\n          )}\n\n          {isNoPeopleMessage && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isLoading && <Loader />}\n\n          {!isLoading && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                <PersonList\n                  people={peopleWithParents}\n                />\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = (\n  { isActive }: { isActive: boolean },\n) => classNames('navbar-item', {\n  'has-background-grey-lighter': isActive,\n});\n\nexport const NavBar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getLinkClass}>\n            Home\n          </NavLink>\n\n          <NavLink to=\"/people\" className={getLinkClass}>\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <main className=\"section\">\n        <Outlet />\n      </main>\n    </div>\n  );\n};\n","export const PageNotFound: React.FC = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Page not found</h1>\n  </div>\n);\n","import {\n  HashRouter, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { App } from './App';\nimport { PageNotFound } from './components/PageNotFound';\n\nexport const Root = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"people\">\n          <Route path=\":slug?\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"home\" element={<Navigate to=\"../..\" />} />\n        <Route path=\"*\" element={<PageNotFound />} />\n      </Route>\n    </Routes>\n  </HashRouter>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}